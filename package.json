{
  "name": "vscode-faust",
  "displayName": "Faust Language Support",
  "description": "Language support for Faust (Functional Audio Stream) - syntax highlighting, LSP integration, and code snippets",
  "version": "0.1.0",
  "publisher": "your-publisher-name",
  "author": "Your Name",
  "license": "MIT",
  "homepage": "https://github.com/your-username/vscode-faust",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/vscode-faust.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/vscode-faust/issues"
  },
  "keywords": [
    "faust",
    "audio",
    "dsp",
    "functional",
    "programming",
    "music",
    "synthesis"
  ],
  "engines": {
    "vscode": "^1.75.0"
  },
  "categories": [
    "Programming Languages",
    "Snippets",
    "Other"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "faust",
        "aliases": [
          "Faust",
          "faust"
        ],
        "extensions": [
          ".dsp",
          ".lib"
        ],
        "configuration": "./language-configuration.json",
        "icon": {
          "light": "./icons/faust-light.svg",
          "dark": "./icons/faust-dark.svg"
        }
      }
    ],
    "grammars": [
      {
        "language": "faust",
        "scopeName": "source.faust",
        "path": "./syntaxes/faust.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "faust",
        "path": "./snippets/faust.json"
      }
    ],
    "configuration": {
      "title": "Faust",
      "properties": {
        "faust.lsp.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable/disable Faust Language Server Protocol support"
        },
        "faust.lsp.executable": {
          "type": "string",
          "default": "faustlsp",
          "description": "Path to the faustlsp executable"
        },
        "faust.configFile": {
          "type": "string",
          "default": ".faustcfg.json",
          "description": "Name of the Faust configuration file"
        }
      }
    },
    "commands": [
      {
        "command": "faust.restartLsp",
        "title": "Restart Faust LSP",
        "category": "Faust"
      },
      {
        "command": "faust.createConfigFile",
        "title": "Create Faust Config File",
        "category": "Faust"
      },
      {
        "command": "faust.compileCurrentFile",
        "title": "Compile Current File (WebAssembly)",
        "category": "Faust",
        "icon": "$(gear)"
      },
      {
        "command": "faust.compileToWasm",
        "title": "Compile to WebAssembly",
        "category": "Faust",
        "icon": "$(gear)"
      },
      {
        "command": "faust.compileToJavaScript",
        "title": "Compile to JavaScript (Browser Only)",
        "category": "Faust",
        "icon": "$(gear)"
      },
      {
        "command": "faust.launchWebAssembly",
        "title": "Launch WebAssembly in Browser",
        "category": "Faust",
        "icon": "$(browser)"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "faust.compileCurrentFile",
          "when": "resourceExtname == .dsp",
          "group": "faust@1"
        },
        {
          "command": "faust.compileToWasm",
          "when": "resourceExtname == .dsp",
          "group": "faust@2"
        },
        {
          "command": "faust.compileToJavaScript",
          "when": "resourceExtname == .dsp",
          "group": "faust@3"
        },
        {
          "command": "faust.launchWebAssembly",
          "when": "resourceExtname == .dsp",
          "group": "faust@4"
        }
      ],
      "editor/title": [
        {
          "command": "faust.compileCurrentFile",
          "when": "resourceExtname == .dsp",
          "group": "navigation@1"
        },
        {
          "command": "faust.launchWebAssembly",
          "when": "resourceExtname == .dsp",
          "group": "navigation@2"
        }
      ],
      "explorer/context": [
        {
          "command": "faust.compileCurrentFile",
          "when": "resourceExtname == .dsp",
          "group": "faust@1"
        },
        {
          "command": "faust.launchWebAssembly",
          "when": "resourceExtname == .dsp",
          "group": "faust@2"
        }
      ]
    },
    "keybindings": [
      {
        "command": "faust.compileCurrentFile",
        "key": "ctrl+shift+b",
        "mac": "cmd+shift+b",
        "when": "resourceExtname == .dsp"
      },
      {
        "command": "faust.launchWebAssembly",
        "key": "ctrl+shift+l",
        "mac": "cmd+shift+l",
        "when": "resourceExtname == .dsp"
      }
    ],
    "version": "0.1.0",
    "publisher": "your-publisher-name",
    "author": "Your Name",
    "license": "MIT",
    "homepage": "https://github.com/your-username/vscode-faust",
    "repository": {
      "type": "git",
      "url": "https://github.com/your-username/vscode-faust.git"
    },
    "bugs": {
      "url": "https://github.com/your-username/vscode-faust/issues"
    },
    "keywords": [
      "faust",
      "audio",
      "dsp",
      "functional",
      "programming",
      "music",
      "synthesis"
    ],
    "engines": {
      "vscode": "^1.75.0"
    },
    "categories": [
      "Programming Languages",
      "Snippets",
      "Other"
    ],
    "main": "./out/extension.js"
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "dependencies": {
    "@grame/faustwasm": "^0.11.0",
    "glob": "^11.0.0",
    "vscode-languageclient": "^9.0.1",
    "which": "^3.0.0"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "^20.19.7",
    "@types/vscode": "^1.101.0",
    "@types/which": "^3.0.4",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "eslint": "^9.25.1",
    "typescript": "^5.8.3"
  }
}
